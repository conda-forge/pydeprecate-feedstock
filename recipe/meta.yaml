{% set name = "pyDeprecate" %}
{% set version = "0.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: c07e8ef5d9f40409183a952ddc288e7164c5d47644556077388c6b33c9aed545

build:
  noarch: python
  number: 1
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - pip
    - python >=3.6
  run:
    - python >=3.6

test:
  imports:
    - deprecate

about:
  home: https://pypi.org/project/pyDeprecate/
  license: Apache-2.0
  license_file: LICENSE
  summary: "Simple tooling for marking deprecated functions or classes and re-routing to the new successors' instance."
  description: |
    The common use-case is moving your functions across codebase or outsourcing some functionalities to new packages.
    For most of these cases, you want to hold some compatibility, so you cannot simply remove past function,
    and also for some time you want to warn users that functionality they have been using is moved and not it is
    deprecated in favor of another function (which shall be used instead) and soon it will be removed completely.
    Another good aspect is to do not overwhelm a user with too many warnings, so per function/class, this warning
    is raised only N times in the preferable stream (warning, logger, etc.).
  dev_url: https://github.com/Borda/pyDeprecate

extra:
  recipe-maintainers:
    - Borda
